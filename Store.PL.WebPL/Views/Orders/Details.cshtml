@model Store.PL.WebPL.Models.Order.DisplayOrderVM

@{
    ViewData["Title"] = "Details";
}

<div class="row">
    <div class="col-md-6">
        <h2>Order Details</h2>
        <p><strong>Order Number:</strong> @Model.Number</p>
        <p><strong>Date:</strong> @Model.Date.ToShortDateString()</p>
        <p><strong>Provider:</strong> @Model.Provider</p>
        <h2>Order Items</h2>
        @if (Model.Items != null && Model.Items.Any())
        {
            <table>
                <thead>
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Quantity </th>
                        <th scope="col">Unit</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    
                        @foreach (var item in Model.Items)
                        {
                            <tr class="table-secondary">
                                <th scope="row">@item.Name</th>
                                <td>@item.Quantity</td>
                                <td>@item.Unit</td>
                                <td>
                                    <a class="btn btn-warning" asp-controller="OrderItems" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                    <a class="btn btn-danger" asp-controller="OrderItems" asp-action="Delete" asp-route-id="@item.Id" asp-route-orderId="@Model.ID">Delete</a>
                                </td>
                            </tr>
                        }
                </tbody>
            </table>
        }
        else
        {
            <h3>No items yet...</h3>
        }
    </div>
    <div class="col-md-6">
        <h2>Add new Order Item</h2>
        @await Component.InvokeAsync("CreateOrderItem", new CreateOrderItemVM {OrderId = Model.ID})
    </div>
</div>