@model IndexViewModel

@{
    ViewData["Title"] = "Orders";
}

<h1 class="m-2">Orders</h1>
<h2 class="m-2">Filters:</h2>
<form method="post" asp-action="Index">
    <div class="row">
        <div class="col-3">
            <label asp-for="Filter.Numbers" class="control-label">Filter by order number</label>
            <select id="Numbers" size="8" class="form-select" asp-for="Filter.Numbers" multiple>
                @foreach (var number in Model.Data.Numbers)
                {
                    <option value="@number">@number</option>
                }
            </select>
        </div>
        <div class="col-2">
            <label asp-for="Filter.Providers" class="control-label">Filter by order provider</label>
            <select id="Providers" size="8" class="form-select" asp-for="Filter.Providers" multiple>
                @foreach (var provider in Model.Data.Providers)
                {
                    <option value="@provider">@provider</option>
                }
            </select>
        </div>
        <div class="col-3">
            <label asp-for="Filter.ItemNames" class="control-label">Filter by items</label>
            <select id="ItemNames" size="8" class="form-select" asp-for="Filter.ItemNames" multiple>
                @foreach (var name in Model.Data.ItemInfo.Names)
                {
                    <option value="@name">@name</option>
                }
            </select>
        </div>
        <div class="col-2">
            <label asp-for="Filter.ItemUnits" class="control-label">Filter by units</label>
            <select id="ItemUnits" size="8" class="form-select" asp-for="Filter.ItemUnits" multiple>
                @foreach (var unit in Model.Data.ItemInfo.Units)
                {
                    <option value="@unit">@unit</option>
                }
            </select>
        </div>
        <div class="col-2">
            <label class="control-label">Filter by order date</label>
            <div class="form-group">
                <label asp-for="Filter.StartDate" class="control-label">Start date</label>
                <input class="form-control" id="StartDate" asp-for="Filter.StartDate" />
            </div>
            <div class="form-group">
                <label asp-for="Filter.EndDate" class="control-label">End date</label>
                <input class="form-control" id="EndDate" asp-for="Filter.EndDate" />
            </div>
        </div>
        <div class="form-group m-1">
            <input type="submit" value="Apply filters" class="btn btn-primary m-1" />
        </div>
    </div>
</form>
<p class="m-1">
    <a class="btn btn-info" asp-controller="Orders" asp-action="Create">Create New Order</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th scope="col">Number</th>
            <th scope="col">Date</th>
            <th scope="col">Provider</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Data.Orders)
        {
            <tr class="table-secondary">
                <th scope="row">@item.Number</th>
                <td>@item.Date.ToShortDateString()</td>
                <td>@item.Provider</td>
                <td>
                    <a class="btn btn-warning" asp-controller="Orders" asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a class="btn btn-success" asp-controller="Orders" asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a class="btn btn-danger" asp-controller="Orders" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <ul class="pagination">
        @if (Model.PageInfo.TotalPages > 1)
        {
            if (Model.PageInfo.CurrentPage == 1)
            {
                <li class="page-item disabled">
                    <a class="page-link">1</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link linkToPage" asp-controller="Orders" asp-action="Page" asp-route-page="1">1</a>
                </li>
            }

            int j = Model.PageInfo.CurrentPage - 2;
            for (int i = 1; i <= 5; i++)
            {
                if (j <= 1 || j > Model.PageInfo.TotalPages)
                {
                    j++;
                    continue;
                }
                else if (Model.PageInfo.CurrentPage == j)
                {
                    <li class="page-item disabled">
                        <a class="page-link">@j</a>
                    </li>
                    j++;
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link linkToPage" asp-controller="Orders" asp-action="Page" asp-route-page="@j">@j</a>
                    </li>
                    j++;
                }
            }
        }
    </ul>
</div>

<script>
    let StartDate = document.getElementById("StartDate").value;
    let EndDate = document.getElementById("EndDate").value;

    let numbersSelect = document.getElementById("Numbers");
    let Numbers = Array.from(numbersSelect.selectedOptions).map(option => option.value);

    let providersSelect = document.getElementById("Providers");
    let Providers = Array.from(providersSelect.selectedOptions).map(option => option.value);

    let itemNamesSelect = document.getElementById("ItemNames");
    let ItemNames = Array.from(itemNamesSelect.selectedOptions).map(option => option.value);

    let itemUnitsSelect = document.getElementById("ItemUnits");
    let ItemUnits = Array.from(itemUnitsSelect.selectedOptions).map(option => option.value);

    let data = {
        Numbers: Numbers,
        Providers: Providers,
        StartDate: StartDate,
        EndDate: EndDate,
        ItemNames: ItemNames,
        ItemUnits: ItemUnits
    };

    let links = document.getElementsByClassName("linkToPage");

    on_load();

    function on_load() {
        for (let i = 0; i < links.length; i++) {
            links[i].addEventListener("click", async function (event) {
                event.preventDefault();

                let url = '/Orders/GetPage/' + links[i].text;
                let requestBody = JSON.stringify(data);
                console.log(requestBody)

                await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: requestBody
                })
                    .then(async function (response) {
                        return await response.text()
                    })
                    .then(function (html) {
                        var parser = new DOMParser();
                        var doc = parser.parseFromString(html, "text/html");

                        console.log(doc);
                        document.body.innerHTML = doc.body.innerHTML;
                        on_load();
                    })
                    .catch(function (err) {
                        console.log('Failed to fetch page: ', err);
                    });
            })
        }
    }
</script>